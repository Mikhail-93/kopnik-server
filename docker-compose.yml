version: '3.8'

services:
    db:
        build: ./.docker/postgres
        #restart: unless-stopped # always
        environment:
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_DB: ${DB_NAME}
        volumes:
            - db:/var/lib/postgresql/data
#        networks:
#            - backend
    php-cli:
        build: ./.docker/php-cli
        working_dir: /app
        volumes:
            - ./:/app
            - ./.docker/php-cli/global.ini:/usr/local/etc/php/conf.d/global.ini
            - ./.docker/php-cli/apcu.ini:/usr/local/etc/php/conf.d/apcu.ini
            - ./.docker/php-cli/.bashrc:/root/.bashrc
            - ./.docker/php-cli/symfony-console-autocomplete:/etc/bash_completion.d/symfony-console-autocomplete
            - ./var/composer:/root/.composer/cache
#        depends_on:
#            - db
        environment:
            APP_ENV: ${APP_ENV}
            DATABASE_URL: 'pgsql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}?serverVersion=12&charset=utf8'
#        networks:
#            - backend
    php-fpm:
        build: ./.docker/php-fpm
        working_dir: /app
        volumes:
            - ./:/app
            - ./.docker/php-fpm/global.ini:/usr/local/etc/php/conf.d/global.ini
        depends_on:
            - db
        environment:
            DATABASE_URL: 'pgsql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}?serverVersion=12&charset=utf8'
#        networks:
#            - backend
#            - web

#networks:
#    web:
#        external: true
#    backend:
#        external: false

volumes:
    db:
